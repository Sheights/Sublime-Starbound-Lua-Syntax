<snippet>
    <content><![CDATA[function init()
	${1:--- Called (once) when the monster is added to the world.
	--
	-- Note that the monster's position may not yet be valid.}
end

function update(dt)
	${2:--- Update loop handler, called once every scriptDelta (defined in *.monstertype) ticks}
end

function die()
	${3:--- Called when shouldDie has returned true and the monster and is about to be removed from the world}
end

function damage(args)
	${4:--- Called after the NPC has taken damage
	--
	-- @tab args Map of info about the damage, structured as:
	--    \{
	--      sourceId = <entity id of entity that caused the damage>,
	--      damage = <numeric amount of damage that was taken>,
	--      sourceDamage = <numeric amount of damage that was originally dealt>,
	--      sourceKind = <string kind of damage being applied, as defined in "damageKind" value in a *.projectile config>
	--    \}
	-- Note that "sourceDamage" can be higher than "damage" if - for
	-- instance - some damage was blocked by a shield.}
end

function shouldDie()
	${5:--- Called each update to determine if the monster should die.
	--
	-- If not defined in the monster's lua, will default to returning true when
	-- the monster's health has been depleted.
	--
	-- @treturn bool true if the monster can die, false to keep the monster alive}
end
${0}]]></content>
    <tabTrigger>TEMPLATE:monster</tabTrigger>
    <scope>source.lua</scope>
    <description>Monster Hooks Template</description>
</snippet>
