<snippet>
    <content><![CDATA[function init()
	${1:--- Called when the NPC is added to the world.}
end

function update(dt)
	${2:--- Update loop handler.
	-- Called once every `scriptDelta` (as defined in *.npctype) game ticks}
end

function interact(args)
	${3:--- Called when the NPC is interacted with.
	-- Available interaction responses are:
	--    "OpenCockpitInterface"
	--    "SitDown"
	--    "OpenCraftingInterface"
	--    "OpenCookingInterface"
	--    "OpenTechInterface"
	--    "Teleport"
	--    "OpenSongbookInterface"
	--    "OpenNpcCraftingInterface"
	--    "OpenTech3DPrinterDialog"
	--    "ShowPopup"
	--    "ScriptConsole"
	--
	-- @tab args Map of interaction event arguments:
	--    \{
	--      sourceId = <Entity id of the entity interacting with this NPC>
	--      sourcePosition = <The \{x,y\} position of the interacting entity>
	--    \}
	--
	-- @return[1] nil (no interaction response)
	-- @treturn[2] string the interaction response that should be performed
	-- @treturn[3] array the interaction response and configuration:
	--    \{
	--       <interaction response string>,
	--       <interaction response config table (map)>
	--    \}}
end

function damage(args)
	${4:--- Called after the NPC has taken damage.
	--
	-- @tab args Map of info about the damage, structured as:
	--    \{
	--      sourceId = <entity id of entity that caused the damage>,
	--      damage = <numeric amount of damage that was taken>,
	--      sourceDamage = <numeric amount of damage that was originally dealt>,
	--      sourceKind = <string kind of damage being applied, as defined in "damageKind" value in a *.projectile config>
	--    \}
	-- Note that "sourceDamage" can be higher than "damage" if - for instance -
	-- some damage was blocked by a shield.}
end

function die()
	${5:--- Called when the npc has died and is about to be removed.}
end
${0}]]></content>
    <tabTrigger>TEMPLATE:npc</tabTrigger>
    <scope>source.lua.starbound</scope>
    <description>NPC Hooks Template</description>
</snippet>
